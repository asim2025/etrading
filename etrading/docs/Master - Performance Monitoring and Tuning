Master - Performance Monitoring and Tuning 
(source: https://github.com/asim2025/etrading.git)

Performance tuning of a Java based low latency system is a continious exercise that requires monitoring, 
profiling and tuning of application code, run-time (JVM) and OS.

There is wealth of information on the internet and printed media. I have listed the references at the
end of the document that I found very useful in practice.

I have created separate performance monitoring, tuning tips/guidelines for Java, Linux and Application design.

First some definitions:

	-	Performance Monitoring
		Collection and observations from a running application.
		Non-intrusive.
		Preventive or pro-active action that can be performed in all environments (dev/qa/prod). 

	-	Performance Porfiling
		Collecting data from an application.
		Intrusive on application throughput or response
		Reactive 
		Rarely done in prod.
		
	-	Performance Tuning
		Follows monitoring and profiling steps
		Involves changing code, app tunning parameters etc.
		Performed in development.
		

References

-	Mechanical Sympothy Blog - http://mechanical-sympathy.blogspot.com/
-	Java Performance Book by Charlie Hunt, 2011
-	SEDA Architecture - http://www.eecs.harvard.edu/~mdw/proj/seda/
-	Actor Model - http://en.wikipedia.org/wiki/Actor_model
-	LinkedIn Groups on HFT, Algo Trading
-	Amdhal Law - http://en.wikipedia.org/wiki/Amdahl%27s_law
-	High Perf Library Review - http://vanillajava.blogspot.com/2012/02/high-performance-libraries-in-java.html
-	MentaBlog - http://mentablog.soliveirajr.com/
-	Java Memory Model - http://www.cs.umd.edu/~pugh/java/memoryModel/
-	Open JDK - http://openjdk.java.net/
-	Concurrent Mode Failure - https://blogs.oracle.com/jonthecollector/entry/what_the_heck_s_a
-	Java Concurrency in Practice by Brian Goetz
-	The Art of Multiprocessor Programming - Maurice Herlihy 



